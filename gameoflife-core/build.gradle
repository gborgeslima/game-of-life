apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: "findbugs"
apply plugin: "pmd"

repositories {
    jcenter()
}

dependencies {
    testCompile(
            [group: 'junit', name: 'junit', version: '4.8.1'],
            [group: 'org.hamcrest', name: 'hamcrest-all', version: '1.1']
    )
}

configurations {
    [pmd, findbugs]
}

dependencies {
    pmd 'pmd:pmd:4.2.5'
    findbugs 'com.google.code.findbugs:findbugs:2.0.1'
}

task pmd << {
    println 'Running PMD static code analysis'
    ant {
        taskdef(name: 'pmd', classname: 'net.sourceforge.pmd.ant.PMDTask',
                classpath: configurations.pmd.asPath)

        taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask',
                classpath: configurations.pmd.asPath)

        pmd(shortFilenames: 'true', failonruleviolation: 'false',
                rulesetfiles: 'conf/pmd-rules.xml') {
            formatter(type: 'xml', toFile: 'build/pmd.xml')
            fileset(dir: "src/main/java") {
                include(name: '**/*.java')
            }
            fileset(dir: "src/test/java") {
                include(name: '**/*.java')
            }
        }

        cpd(minimumTokenCount: '50', format: 'xml',
                ignoreIdentifiers: 'true',
                outputFile: 'build/cpd.xml') {
            fileset(dir: "src/main/java") {
                include(name: '**/*.java')
            }
            fileset(dir: "src/test/java") {
                include(name: '**/*.java')
            }
        }
    }
}

findbugs {
  ignoreFailures = true
  toolVersion = "2.0.1"
  sourceSets = [sourceSets.main]
  reportsDir = file("$project.buildDir/reports/findbugs")
  effort = "max"
}

pmd {
  ignoreFailures = true
  sourceSets = [sourceSets.main]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSets = [
    "basic",
    "braces"
  ]
}
// add CPD to check
check << {
  File outDir = new File('build/reports/pmd/')
  outDir.mkdirs()
  ant.taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask',
    classpath: configurations.pmd.asPath)
  ant.cpd(minimumTokenCount: '100', format: 'xml',
    outputFile: new File(outDir , 'cpd.xml')) {
    fileset(dir: "src/main/java") {
      include(name: '**/*.java')
    }
  }
}

